@model IEnumerable<HomeLoan.Models.LoanApplication>
@{
    ViewData["Title"] = "User Dashboard";
    var user = ViewBag.User as HomeLoan.Models.AppUser;
    var total = Model.Count();
    var approved = Model.Count(x => x.Status == "Approved");
    var rejected = Model.Count(x => x.Status == "Rejected");
    var pending = Model.Count(x => x.Status == "Sent for verification" || x.Status == "Verified and sent for final approval");

    // compute EMI for the most recent active loan (fallback to 0)
    var recentLoan = Model?.OrderByDescending(a => a.AppliedOn).FirstOrDefault();
    double computedEmi = 0.0;
    int recentLoanId = 0;
    if (recentLoan != null)
    {
        recentLoanId = recentLoan.Id;
        double principal = (double)recentLoan.LoanAmount;
        double monthlyRate = (double)recentLoan.InterestRate / 12.0 / 100.0;
        int n = recentLoan.TenureMonths > 0 ? recentLoan.TenureMonths : (recentLoan.TenureMonths == 0 ? 1 : recentLoan.TenureMonths);
        if (monthlyRate > 0 && n > 0)
        {
            computedEmi = principal * monthlyRate * Math.Pow(1 + monthlyRate, n) / (Math.Pow(1 + monthlyRate, n) - 1);
        }
        else if (n > 0)
        {
            computedEmi = principal / n;
        }
    }
}

<div class="container-fluid py-5 user-bg">
    <div class="text-center text-white mb-5">
        <h2 class="fw-bold" style="color:#000">Welcome, @user.FirstName 👋</h2>
        <p class="lead mb-0">Here’s an overview of your HomeLoan applications.</p>
    </div>

    <!-- ACTION: Make a Loan Payment (uses computed EMI for most recent loan) -->
    <div class="row mb-4">
        <div class="col text-end">
            @if (computedEmi > 0)
            {
                <a class="btn btn-primary" href="/Payment/Pay?amount=@(computedEmi.ToString("F2"))&loanId=@recentLoanId">Make a Loan Payment (₹@computedEmi.ToString("N0"))</a>
            }
            else
            {
                <a class="btn btn-primary" href="/Payment/Pay">Make a Loan Payment</a>
            }
        </div>
    </div>

    <!-- Summary Cards -->
    <div class="row g-3 justify-content-center mb-5">
        <div class="col-md-3">
            <div class="card stat-card total shadow">
                <div class="card-body text-center">
                    <h6 class="text-uppercase text-muted mb-1"><b>Total Applications</b></h6>
                    <h2 class="fw-bold">@total</h2>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card stat-card approved shadow">
                <div class="card-body text-center">
                    <h6 class="text-uppercase text-muted mb-1"><b>Approved</b></h6>
                    <h2 class="fw-bold">@approved</h2>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card stat-card pending shadow">
                <div class="card-body text-center">
                    <h6 class="text-uppercase text-muted mb-1"><b>Pending</b></h6>
                    <h2 class="fw-bold">@pending</h2>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card stat-card rejected shadow">
                <div class="card-body text-center">
                    <h6 class="text-uppercase text-muted mb-1"><b>Rejected</b></h6>
                    <h2 class="fw-bold">@rejected</h2>
                </div>
            </div>
        </div>
    </div>

    <!-- Loans Table -->
    <div class="card shadow-lg">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h5 class="mb-0">My Loan Applications</h5>
            <a href="/Loan/Apply" class="btn btn-outline-light btn-sm">+ Apply New</a>
        </div>

        <div class="card-body table-responsive p-4">
            @if (!Model.Any())
            {
                <div class="alert alert-info text-center">
                    You don’t have any applications yet.
                    <a href="/Loan/Apply" class="alert-link">Apply now</a>.
                </div>
            }
            else
            {
                <table class="table table-bordered table-hover text-center align-middle">
                    <thead class="table-light">
                        <tr>
                            <th>ID</th>
                            <th>Property</th>
                            <th>Loan Amount</th>
                            <th>Interest</th>
                            <th>Tenure (Years)</th>
                            <th>Status</th>
                            <th>EMI (₹)</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var app in Model)
                        {
                            <tr>
                                <td>@app.Id</td>
                                <td>@app.PropertyName</td>
                                <td>₹@app.LoanAmount.ToString("N0")</td>
                                <td>@app.InterestRate%</td>
                                <td>@(app.TenureMonths / 12)</td>
                                <td>
                                    <span class="badge
                                    @(app.Status == "Approved" ? "bg-success" :
                                      app.Status == "Rejected" ? "bg-danger" :
                                      app.Status.Contains("verification") ? "bg-warning text-dark" : "bg-secondary")">
                                @app.Status
                            </span>
                        </td>
                        <td>
                            @{
                                        double principal = (double)app.LoanAmount;
                                        double rate = (double)app.InterestRate / 12 / 100;
                                        int n = app.TenureMonths;
                                        double emi = principal * rate * Math.Pow(1 + rate, n) / (Math.Pow(1 + rate, n) - 1);
                                    }
                                    ₹@emi.ToString("N0")
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
</div>

<!-- one-time welcome modal (shows once because TempData is consumed) -->
@if (TempData["ShowWelcome"] != null)
{
    var msg = TempData["WelcomeMessage"]?.ToString() ?? "Welcome!";
    <div class="modal fade" id="welcomeModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-body text-center p-4">
                    <h5 class="mb-2">@msg</h5>
                    <p class="mb-0">Glad to see you — here’s your dashboard.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Continue</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            try {
                var m = new bootstrap.Modal(document.getElementById('welcomeModal'));
                m.show();
            } catch (e) { console && console.warn && console.warn(e); }
        });
    </script>
}

<style>
    /* exact page background used in Login page */
    .user-bg {
        min-height: 100vh;
        background: linear-gradient(135deg, #e0e7ff 0%, #a8d1ff 40%, #004aad 100%);
        display: block;
        padding-bottom: 3rem;
        background-attachment: fixed;
    }

    .stat-card {
        border-radius: 12px;
        color: #fff;
    }

        .stat-card.total {
            background: #007bff;

        }

        .stat-card.approved {
            background: #28a745;
        }

        .stat-card.pending {
            background: #ffc107;
            color: #fff;
        }

        .stat-card.rejected {
            background: #dc3545;
        }

    .card-header {
        border-top-left-radius: 12px;
        border-top-right-radius: 12px;
    }

    .table th {
        background-color: #e9ecef;
    }

    .badge {
        font-size: 0.9rem;
    }
</style>
